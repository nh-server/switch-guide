import{_ as e,c as i,o as t,ae as r}from"./chunks/framework.DBofN92C.js";const m=JSON.parse('{"title":"MissionControl","description":"","frontmatter":{},"headers":[],"relativePath":"homebrew/mission-control.md","filePath":"homebrew/mission-control.md"}'),n={name:"homebrew/mission-control.md"};function s(a,o,l,c,h,d){return t(),i("div",null,o[0]||(o[0]=[r('<h1 id="missioncontrol" tabindex="-1">MissionControl <a class="header-anchor" href="#missioncontrol" aria-label="Permalink to &quot;MissionControl&quot;">​</a></h1><p>MissionControl is a <a href="./index.html#terminologies">sysmodule</a> that allows you to pair normally-unsupported controllers as if they were natively supported, like PS3, PS4, PS5 and Xbox One S/X controllers via Bluetooth. The full supported controller list can be found on the official Github repository <a href="https://github.com/ndeadly/MissionControl" target="_blank" rel="noreferrer">here</a> including pairing instructions for the supported controllers.</p><h2 id="installation-requirements" tabindex="-1">Installation requirements: <a class="header-anchor" href="#installation-requirements" aria-label="Permalink to &quot;Installation requirements:&quot;">​</a></h2><ul><li>An archive manager like <a href="https://www.7-zip.org/" target="_blank" rel="noreferrer">7-Zip</a></li><li>The latest release of <a href="https://github.com/ndeadly/MissionControl/releases" target="_blank" rel="noreferrer">MissionControl</a> (the <code>MissionControl-(version)-master.zip</code> file)</li></ul><h2 id="installation-instructions" tabindex="-1">Installation instructions: <a class="header-anchor" href="#installation-instructions" aria-label="Permalink to &quot;Installation instructions:&quot;">​</a></h2><ol><li>Boot into hekate and go to <code>Tools</code> &gt; <code>USB Tools</code> &gt; <code>SD Card</code>, then plug your Switch into your PC via USB.</li><li>Your microSD card should now be accessible on your PC, open it.</li><li>Extract the <code>.zip</code> file to a location on your computer. <ul><li>If your archive manager allows for it, you can also simply open the <code>.zip</code> file directly.</li></ul></li><li>Copy the <em>contents</em> of the (extracted) <code>.zip</code> file to the root of your microSD card. <ul><li><strong>Optional:</strong> You can verify if you&#39;ve installed MissionControl correctly, you should have a folder called <code>010000000000BD00</code> (MissionControl) in <code>sd:/atmosphere/contents</code>.</li></ul></li><li>Boot into CFW.</li></ol><h2 id="troubleshooting" tabindex="-1">Troubleshooting <a class="header-anchor" href="#troubleshooting" aria-label="Permalink to &quot;Troubleshooting&quot;">​</a></h2><h3 id="my-switch-crashes-on-boot-after-i-installed-missioncontrol" tabindex="-1">My Switch crashes on boot after I installed MissionControl!: <a class="header-anchor" href="#my-switch-crashes-on-boot-after-i-installed-missioncontrol" aria-label="Permalink to &quot;My Switch crashes on boot after I installed MissionControl!:&quot;">​</a></h3><p><strong>Cause:</strong> If your Switch crashes with Error <code>std::abort (0xFFE)</code> and Title ID <code>010000000000BD00</code>, you&#39;re using a version of MissionControl that&#39;s incompatible with your Atmosphère version. The expected Atmosphère version is mentioned on each release page of a MissionControl release.</p><h3 id="missioncontrol-isn-t-working" tabindex="-1">MissionControl isn&#39;t working!: <a class="header-anchor" href="#missioncontrol-isn-t-working" aria-label="Permalink to &quot;MissionControl isn&#39;t working!:&quot;">​</a></h3><p>Assuming you&#39;ve followed the installation instructions successfully, this is probably due to the archive bit being set on one or more folders/files on your microSD card. This is usually the result of copying files to a microSD card via a Mac. If you are experiencing this issue, try running the archive bit fixer utility via hekate for all files.</p><p>This can be done by booting into hekate and going to <code>Tools</code> &gt; <code>Arch bit • RCM Touch • Pkg1/2</code> &gt; <code>Fix Archive Bit</code>.</p>',12)]))}const f=e(n,[["render",s]]);export{m as __pageData,f as default};
